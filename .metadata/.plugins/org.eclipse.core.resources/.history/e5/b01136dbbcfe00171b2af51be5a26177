import java.util.ArrayList;

public class Simulation {
	
	public ArrayList<Item> loadItems(){
		//read file phase 2 and create object for each item then store it in the arraylist
		return new ArrayList<>();
	}

	public ArrayList<Item> loadU1(ArrayList<Item> items){
		/*this method takes the ArrayList of Items returned from loadItems and starts creating U1 rockets. 
		 * It first tries to fill up 1 rocket with as many items as possible before creating a new rocket object and filling that one until all items are loaded. 
		 * The method then returns the ArrayList of those U1 rockets that are fully loaded.
		 */
		
		ArrayList<Item> loadedItems = loadItems();
		
		return new ArrayList<Item>();
	}
	
	public ArrayList<Item> loadU2(ArrayList<Item> items){
		/*this method takes the ArrayList of Items returned from loadItems and starts creating U1 rockets. 
		 * It first tries to fill up 1 rocket with as many items as possible before creating a new rocket object and filling that one until all items are loaded. 
		 * The method then returns the ArrayList of those U1 rockets that are fully loaded.
		 */
		
		ArrayList<Item> loadedItems = loadItems();
		
		return new ArrayList<Item>();
	}
	
	public int runSimulation(ArrayList<Rocket> rockets){
		/*this method takes an ArrayList of Rockets and calls launch and land methods for each of the rockets in the ArrayList. 
		 * Every time a rocket explodes or crashes (i.e if launch or land return false) it will have to send that rocket again. 
		 * All while keeping track of the total budget required to send each rocket safely to Mars. 
		 * runSimulation then returns the total budget required to send all rockets (including the crashed ones).
		 */
		int budget;
		
		return budget;
	}
	
}
